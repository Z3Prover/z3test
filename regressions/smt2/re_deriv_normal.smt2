(declare-const c1 (_ BitVec 8))
(declare-const x String)

(echo "====== Example derivative normal forms ======")

(echo "==== ranges ====")

(echo "== empty range ==")
(simplify (re.derivative c1 (re.range "b" "a")))
(echo "== single character range ==")
(simplify (re.derivative c1 (re.range "a" "a")))
(echo "== multiple character range ==")
(simplify (re.derivative c1 (re.range "a" "b")))
(echo "== range star ==")
(simplify (re.derivative c1 (re.* (re.range "a" "b"))))
(echo "== union of nested ranges ==")
(simplify (re.derivative c1 (re.union (re.range "a" "g") (re.range "c" "e"))))
(echo "== union of disjoint ranges ==")
(simplify (re.derivative c1 (re.union (re.range "a" "c") (re.range "e" "g"))))
(echo "== union of intersecting ranges ==")
(simplify (re.derivative c1 (re.union (re.range "a" "e") (re.range "c" "g"))))
(echo "== intersection of nested ranges ==")
(simplify (re.derivative c1 (re.inter (re.range "a" "g") (re.range "c" "e"))))
(echo "== intersection of disjoint ranges ==")
(simplify (re.derivative c1 (re.inter (re.range "a" "c") (re.range "e" "g"))))
(echo "== intersection of intersecting ranges ==")
(simplify (re.derivative c1 (re.inter (re.range "a" "e") (re.range "c" "g"))))

(echo "==== characters/strings ====")

(echo "== single string ==")
(simplify (re.derivative c1 (str.to_re "cat")))
(echo "== union of characters ==")
(simplify (re.derivative c1 (re.union (str.to_re "a") (re.union (str.to_re "b") (str.to_re "c")))))
(echo "== union of strings starting with the same character ==")
(simplify (re.derivative c1 (re.union (str.to_re "at") (re.union (str.to_re "are") (str.to_re "am")))))
(echo "== union of strings starting with the different characters ==")
(simplify (re.derivative c1 (re.union (str.to_re "to") (re.union (str.to_re "if") (str.to_re "a")))))
(echo "== large union of various strings ==")
(simplify (re.derivative c1 (re.union (str.to_re "four") (re.union (str.to_re "score") (re.union (str.to_re "and") (re.union (str.to_re "seven") (re.union (str.to_re "years") (str.to_re "ago"))))))))

(echo "==== complex examples ====")

(echo "== 1 ==")
(simplify (re.derivative c1 (re.inter (re.union (re.* (re.range "a" "b")) (re.* (re.range "c" "d"))) (re.* (re.range "b" "c")))))
(echo "== 2 ==")
(simplify (re.derivative c1 (re.inter (re.++ re.all (re.range "0" "0")) (re.* (re.range "1" "1")))))

(echo "==== nullable infinite loop checks ====")

(echo "== loop 1 (original) ==")
(simplify (str.in_re "" (re.inter (re.comp (re.derivative c1 (re.derivative (seq.nth_i x 0) (str.to_re x)))) (re.comp (re.derivative c1 (str.to_re x))))))
(echo "== loop 2 (minimized) ==")
(simplify (str.in_re "" (re.inter (re.derivative c1 (re.derivative c1 (str.to_re x))) (re.derivative c1 (str.to_re x)))))
